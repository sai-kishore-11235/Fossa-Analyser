name: FOSSA Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install FOSSA CLI
        run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash
          echo "$HOME/.fossa/bin" >> $GITHUB_PATH

      - name: Run FOSSA Scan
        id: fossa
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: |
          set -o pipefail
          fossa analyze 2>&1 | tee fossa_output.txt
          fossa test 2>&1 | tee -a fossa_output.txt

      - name: Get latest secure version from OpenAI and update package.json
        if: failure()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Extract vulnerable package and CVE from FOSSA output
          vuln_pkg=$(grep -Eo '[a-zA-Z0-9._-]+@[0-9.]+' fossa_output.txt | head -n1)
          cve=$(grep -Eo 'CVE-[0-9]{4}-[0-9]+' fossa_output.txt | head -n1)
          pkg=$(echo $vuln_pkg | cut -d'@' -f1)
          echo "Detected package: $pkg"
          echo "Detected CVE: $cve"

          # Compose prompt for OpenAI
          prompt="What is the latest secure version of $pkg that fixes $cve for npm?"

          # Call OpenAI API
          response=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-4o",
              "messages": [{"role": "user", "content": "'"$prompt"'"}],
              "max_tokens": 50
            }')

          echo "OpenAI API raw response: $response"

          error_msg=$(echo "$response" | jq -r '.error.message // empty')
          if [ -n "$error_msg" ]; then
            echo "OpenAI API error: $error_msg"
          fi

          # Extract version from OpenAI response
          latest_ver=$(echo "$response" | jq -r '.choices[0].message.content' | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')

          echo "OpenAI recommended version: $latest_ver"

          if [ -n "$latest_ver" ]; then
            jq --arg pkg "$pkg" --arg ver "$latest_ver" '.dependencies[$pkg]=$ver' package.json > tmp.json && mv tmp.json package.json
            npm install
            echo "Updated $pkg to $latest_ver due to OpenAI recommendation." > FOSSA_REPORT.md
          else
            echo "No version found from OpenAI response." > FOSSA_REPORT.md
          fi

      - name: Commit changes if FOSSA failed
        if: failure()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json FOSSA_REPORT.md || true
          git commit -m "chore: update recommended package from FOSSA scan failure" || echo "No changes to commit"

      - name: Create Pull Request
        if: failure()
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update recommended package from FOSSA scan failure"
          title: "FOSSA scan failed - recommended package update"
          body: "This PR was created automatically because the FOSSA scan failed. The recommended package update has been applied. See FOSSA_REPORT.md for details."
          branch: fossa-failure-recommended-update